name: Deploy to Docker Hub and Render

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    name: Run Tests, Build Docker Image, and Deploy
    runs-on: ubuntu-latest

    steps:
    # 1. Clonar el repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9  

    # 3. Instalar dependencias
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    # 4. Ejecutar pruebas con pytest y cobertura
    - name: Run tests with pytest
      run: |
        source venv/bin/activate
        pytest --disable-warnings --cov=./ --cov-report=xml
      continue-on-error: true

    # 5. Iniciar sesi√≥n en Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    # 6. Construir la imagen Docker
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest .

    # 7. Subir la imagen a Docker Hub
    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest

    # 8. Notificar a Render para el despliegue
    - name: Trigger Deploy on Render
      env:
        RENDER_API_TOKEN: ${{ secrets.RENDER_API_TOKEN }}
      run: |
        curl --request POST --url https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
          --header 'accept: application/json' \
          --header 'authorization: Bearer $RENDER_API_TOKEN' \
          --header 'content-type: application/json'
